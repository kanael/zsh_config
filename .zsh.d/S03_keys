# make backward-delete-char work properly
autoload -U modify-current-argument


################ KEY BINDING #####################
bindkey '\e[1~' beginning-of-line
bindkey '\e[4~' end-of-line
bindkey '\e[3~' delete-char
bindkey '\e[1;5D' backward-word
bindkey '\e[1;5C' forward-word

# you have to make iTerm send this sequence if you want to use it....
bindkey '\e?' backward-delete-word

bindkey '^G' backward-kill-line
bindkey '^z' undo

eval "insert-cdup () { LBUFFER+='cd ..'; zle accept-line }"
zle -N insert-cdup
bindkey '\e[1;6A' insert-cdup

eval "insert-cycledleft () { zle push-line; LBUFFER='pushd -q +1'; zle accept-line }"
zle -N insert-cycledleft
bindkey "\e[1;6D" insert-cycledleft
eval "insert-cycledright () { zle push-line; LBUFFER='pushd -q -0'; zle accept-line }"
zle -N insert-cycledright
bindkey "\e[1;6C" insert-cycledright

eval "insert-popd () { LBUFFER+='popd'; zle accept-line }"
zle -N insert-popd
bindkey "^P" insert-popd

# word quoting
function _quote_word()
{
    modify-current-argument '\"${(q)ARG}\"'
}

zle -N _quote_word

function _unquote_word()
{
  modify-current-argument '${(Q)ARG}'
}
zle -N _unquote_word

bindkey "^Xq" _quote_word
bindkey "^XQ" _unquote_word

# Function keys

eval "zle-no-op() {}"
zle -N zle-no-op

#F1
bindkey '^[OP' zle-no-op
#F2
bindkey '^[OQ' zle-no-op
#F3
bindkey '^[OR' zle-no-op
#F4
bindkey '^[OS' zle-no-op
#F5
bindkey '\e[[16~' zle-no-op
#F6
bindkey '\e[[17~' zle-no-op
#F7
bindkey '\e[[18~' zle-no-op
#F8
bindkey '\e[[19~' zle-no-op
#F9
bindkey '\e[[20~' zle-no-op
#F10
bindkey '\e[[21~' zle-no-op
#F11
bindkey '\e[[23~' zle-no-op
#F12
bindkey '\e[[24~' zle-no-op

