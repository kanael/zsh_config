# Coloring for python's nose test-running tool
export NOSE_REDNOSE=1

python_module_dir() {
    python -c "import $1, os; print os.path.dirname($1.__file__)"
}

cdpy() {
    cd "$(python_module_dir $1)"
}

mkpkg() {
    mkdir -p $1
    echo >> $1/__init__.py
}


GLOBAL_VIRTUALENV_NAME="__global__"

function venv_prompt() {
    reset_prompt;
    if [[ "${VIRTUAL_ENV:t}" != "$GLOBAL_VIRTUALENV_NAME" ]]; then
        PS1="%{$bg[magenta]%}${VIRTUAL_ENV:t}$rst$PS1"
    fi
}

### virtualenv
export VIRTUALENVWRAPPER_VIRTUALENV=/usr/local/share/python/virtualenv
VIRTUALENV_WRAPPER=/usr/local/share/python/virtualenvwrapper.sh
if [ -e $VIRTUALENV_WRAPPER ]; then
    __zsh_version="$ZSH_VERSION"
    unset ZSH_VERSION # virtualenv_wrapper installs completions that hang everything...
    source $VIRTUALENV_WRAPPER
    export ZSH_VERSION=$__zsh_version
    export WORKON_HOME="$HOME/.virtualenvs"
    export VIRTUALENVWRAPPER_HOOK_DIR="$WORKON_HOME"
    if [ ! -d $WORKON_HOME/$GLOBAL_VIRTUALENV_NAME ]; then
        echo "I've detected you don't have a global virtualenv. Setting up..."
        mkvirtualenv $GLOBAL_VIRTUALENV_NAME
        echo "venv_prompt" > $VIRTUALENVWRAPPER_HOOK_DIR/postactivate
        workon $GLOBAL_VIRTUALENV_NAME
        easy_install virtualenv
        easy_install virtualenvwrapper
    fi
    # workon is not fast enough, so we do this directly
    source $WORKON_HOME/$GLOBAL_VIRTUALENV_NAME/bin/activate
    source $WORKON_HOME/postactivate

    function _complete__workon { reply=(`workon`); }
    compctl -K _complete__workon workon

    function pyisolate {
       rm -rf $WORKON_HOME/isolated
       mkvirtualenv isolated
    }
fi
